generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  email          String      @unique
  hashedPassword String
  name           String      @unique
  partsList      PartsList[]
}

model Category {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String        @unique
  Cpu         Cpu[]
  MotherBoard MotherBoard[]
  Memory      Memory[]
  Hdd         Hdd[]
  Ssd         Ssd[]
  Gpu         Gpu[]
  Power       Power[]
  PcCase      PcCase[]
  Cooler      Cooler[]
  Display     Display[]
}

model PartsList {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  name          String
  description   String
  isOpened      Boolean
  userId        Int
  cpuId         Int?
  motherboardId Int?
  memoryId      Int?
  hddId         Int?
  ssdId         Int?
  gpuId         Int?
  powerId       Int?
  pccaseId      Int?
  coolerId      Int?
  displayId     Int?
  user          User         @relation(fields: [userId], references: [id])
  cpu           Cpu?         @relation(fields: [cpuId], references: [id], onDelete: SetNull)
  motherboard   MotherBoard? @relation(fields: [motherboardId], references: [id], onDelete: SetNull)
  memory        Memory?      @relation(fields: [memoryId], references: [id], onDelete: SetNull)
  hdd           Hdd?         @relation(fields: [hddId], references: [id], onDelete: SetNull)
  ssd           Ssd?         @relation(fields: [ssdId], references: [id], onDelete: SetNull)
  gpu           Gpu?         @relation(fields: [gpuId], references: [id], onDelete: SetNull)
  power         Power?       @relation(fields: [powerId], references: [id], onDelete: SetNull)
  pccase        PcCase?      @relation(fields: [pccaseId], references: [id], onDelete: SetNull)
  cooler        Cooler?      @relation(fields: [coolerId], references: [id], onDelete: SetNull)
  display       Display?     @relation(fields: [displayId], references: [id], onDelete: SetNull)
}

model Cpu {
  id               Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  name             String
  brand            String
  processor        String
  socket           String
  wattage          Int // CPUの消費電力（ワット単位）
  core             Int // CPUのコア数
  baseFrequency    String // CPUの基本動作周波数
  boostedFrequency String // CPUのブースト時の最大周波数
  image            String?
  url              String?     @db.VarChar(2048)
  price            String?
  categoryId       Int
  category         Category    @relation(fields: [categoryId], references: [id])
  partsList        PartsList[]
}

model MotherBoard {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String
  brand       String
  chip        String
  formFactor  String // マザーボードのフォームファクタ（例：ATX、Micro-ATXなど）
  memoryType  String // マザーボードがサポートするメモリタイプ（例：DDR4、DDR3など）
  memorySlots Int // マザーボードにあるメモリスロットの数
  maxMemory   Int // マザーボードがサポートされる最大メモリ容量
  socket      String // マザーボードのCPUソケットタイプ
  pciSlots    String? // マザーボードにあるPCIスロットの数（オプショナル）
  image       String?
  url         String?     @db.VarChar(2048)
  price       String?
  categoryId  Int
  category    Category    @relation(fields: [categoryId], references: [id])
  partsList   PartsList[]
}

model Memory {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  type       String // メモリのタイプ（例：DDR4、DDR3など）
  frequency  String // メモリの周波数（例：3200MHz、2400MHzなど）
  interface  String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsList  PartsList[]
}

model Hdd {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  capacity   String // HDDの容量
  size       String // HDDのサイズ（例：2.5インチなど）
  speed      String // HDDの読み込み/書き込み速度
  interface  String // HDDのインターフェースタイプ（例：SATA、SAS）
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsList  PartsList[]
}

model Ssd {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  capacity   String // SSDの容量（例：256GB、512GBなど）
  size       String // SSDのサイズ（例：2.5インチ、M.2など）
  speed      String // SSDの読み込み/書き込み速度
  interface  String // SSDのインターフェースタイプ（例：SATA、NVMeなど）
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsList  PartsList[]
}

model Gpu {
  id              Int         @id @default(autoincrement())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  name            String
  brand           String
  length          String // GPUの物理的なサイズ(長さ)
  chip            String // GPUのチップセット（例：NVIDIAのGeForce RTX 3080）
  core            String // GPUのコア数
  memory          String // GPUのメモリ容量とタイプ（例：8GB GDDR6）
  baseFrequency   String // GPUの基本動作周波数
  memoryFrequency String // GPUのメモリ周波数
  wattage         Int // GPUの消費電力（ワット単位）
  interface       String // GPUのインターフェースタイプ（例：PCI-Express 4.0 x16）
  image           String?
  url             String?     @db.VarChar(2048)
  price           String?
  categoryId      Int
  category        Category    @relation(fields: [categoryId], references: [id])
  partsList       PartsList[]
}

model Power {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  name          String
  brand         String
  type          String // 電源ユニットの規格（例：ATX）
  capacity      String // 電源ユニットの出力電力（例：650W）
  certification String // 電源ユニットの認証レベル（例：80 PLUS Bronze、Silver、Gold）
  image         String?
  url           String?     @db.VarChar(2048)
  price         String?
  categoryId    Int
  category      Category    @relation(fields: [categoryId], references: [id])
  partsList     PartsList[]
}

model PcCase {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  formFactor String // PCケースが対応するマザーボードのフォームファクター（例：ATX、Micro ATX、Mini ITX）
  weight     String // PCケースの重量
  size       String //  PCケースのサイズ（幅×高さ×奥行きなど）
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsList  PartsList[]
}

model Cooler {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  name         String
  brand        String
  supportedTdp Int // クーラーが対応する最大TDP値（ワット単位）
  coolingType  String // 冷却方式（例：エアクーリング、水冷）
  fanCount     Int // ファンの数
  airFlow      String // 風量（CFMなど）
  size         String // サイズ（L x W x H mm）
  socket       String // 互換性のあるソケット（例："LGA1151, AM4, LGA2066")
  image        String?
  url          String?     @db.VarChar(2048)
  price        String?
  categoryId   Int
  category     Category    @relation(fields: [categoryId], references: [id])
  partsList    PartsList[]
}

model Display {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  size       String
  type       String
  speed      String
  resolution String
  contrast   String?
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsList  PartsList[]
}
