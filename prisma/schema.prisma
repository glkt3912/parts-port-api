generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  email          String      @unique
  hashedPassword String
  name           String      @unique
  partsLists     PartsList[]
}

model Category {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String        @unique
  Cpu         Cpu[]
  MotherBoard MotherBoard[]
  Memory      Memory[]
  Hdd         Hdd[]
  Ssd         Ssd[]
  Gpu         Gpu[]
  Power       Power[]
  PcCase      PcCase[]
  Cooler      Cooler[]
  Display     Display[]
}

model PartsList {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  name          String
  description   String
  isOpened      Boolean
  userId        Int
  cpuId         Int?
  motherboardId Int?
  memoryId      Int?
  hddId         Int?
  ssdId         Int?
  gpuId         Int?
  powerId       Int?
  pccaseId      Int?
  coolerId      Int?
  displayId     Int?
  user          User         @relation(fields: [userId], references: [id])
  cpu           Cpu?         @relation(fields: [cpuId], references: [id], onDelete: SetNull)
  motherboard   MotherBoard? @relation(fields: [motherboardId], references: [id], onDelete: SetNull)
  memory        Memory?      @relation(fields: [memoryId], references: [id], onDelete: SetNull)
  hdd           Hdd?         @relation(fields: [hddId], references: [id], onDelete: SetNull)
  ssd           Ssd?         @relation(fields: [ssdId], references: [id], onDelete: SetNull)
  gpu           Gpu?         @relation(fields: [gpuId], references: [id], onDelete: SetNull)
  power         Power?       @relation(fields: [powerId], references: [id], onDelete: SetNull)
  pccase        PcCase?      @relation(fields: [pccaseId], references: [id], onDelete: SetNull)
  cooler        Cooler?      @relation(fields: [coolerId], references: [id], onDelete: SetNull)
  display       Display?     @relation(fields: [displayId], references: [id], onDelete: SetNull)
}

model Cpu {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  processor  String
  socket     String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model MotherBoard {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  chipset    String
  formfactor String
  socket     String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Memory {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  capacity   String
  setnumber  String
  standard   String
  interface  String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Hdd {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  series     String
  capacity   String
  speed      String
  interface  String
  cache      String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Ssd {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  capacity   String
  size       String
  interface  String
  ssdtype    String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Gpu {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  chip       String
  core       String
  memory     String
  clock      String
  interface  String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Power {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  name          String
  brand         String
  standard      String
  capacity      String
  certification String
  partNumber    String
  image         String?
  url           String?     @db.VarChar(2048)
  price         String?
  categoryId    Int
  category      Category    @relation(fields: [categoryId], references: [id])
  partsLists    PartsList[]
}

model PcCase {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  factor     String
  weight     String
  size       String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Cooler {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  intel      String
  amd        String
  flowtype   String
  noise      String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}

model Display {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  brand      String
  size       String
  type       String
  speed      String
  area       String
  resolution String
  contrast   String
  partNumber String
  image      String?
  url        String?     @db.VarChar(2048)
  price      String?
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id])
  partsLists PartsList[]
}
